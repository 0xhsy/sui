[workspace]
resolver = "2"
members = [
    "crates/mysten-common",
    "crates/mysten-metrics",
    "crates/mysten-network",
    "crates/mysten-util-mem",
    "crates/mysten-util-mem-derive",
    "crates/prometheus-closure-metric",
    "crates/shared-crypto",
    "crates/sui",
    "crates/sui-adapter",
    "crates/sui-adapter-transactional-tests",
    "crates/sui-benchmark",
    "crates/sui-cluster-test",
    "crates/sui-config",
    "crates/sui-core",
    "crates/sui-cost",
    "crates/sui-cost-tables",
    "crates/sui-faucet",
    "crates/sui-framework",
    "crates/sui-framework-build",
    "crates/sui-framework-tests",
    "crates/sui-indexer",
    "crates/sui-json",
    "crates/sui-json-rpc",
    "crates/sui-json-rpc-types",
    "crates/sui-keys",
    "crates/sui-macros",
    "crates/sui-move",
    "crates/sui-network",
    "crates/sui-node",
    "crates/sui-open-rpc",
    "crates/sui-open-rpc-macros",
    "crates/sui-proc-macros",
    "crates/sui-protocol-config",
    "crates/sui-proxy",
    "crates/sui-rosetta",
    "crates/sui-rpc-loadgen",
    "crates/sui-sdk",
    "crates/sui-simulator",
    "crates/sui-source-validation",
    "crates/sui-storage",
    "crates/sui-swarm",
    "crates/sui-telemetry",
    "crates/sui-test-validator",
    "crates/sui-tls",
    "crates/sui-tool",
    "crates/sui-transaction-builder",
    "crates/sui-transactional-test-runner",
    "crates/sui-types",
    "crates/sui-verifier",
    "crates/sui-verifier-transactional-tests",
    "crates/telemetry-subscribers",
    "crates/test-utils",
    "crates/typed-store",
    "crates/typed-store-derive",
    "crates/workspace-hack",
    "crates/x",
    "narwhal/config",
    "narwhal/consensus",
    "narwhal/crypto",
    "narwhal/dag",
    "narwhal/examples",
    "narwhal/executor",
    "narwhal/network",
    "narwhal/node",
    "narwhal/primary",
    "narwhal/storage",
    "narwhal/test-utils",
    "narwhal/types",
    "narwhal/worker",

    # third-party/move
    # "third-party/move/extensions/async/move-async-vm",
    "third-party/move/extensions/move-table-extension",
    # "third-party/move/move-analyzer",
    "third-party/move/move-binary-format",
    "third-party/move/move-binary-format/serializer-tests",
    "third-party/move/move-borrow-graph",
    "third-party/move/move-bytecode-verifier",
    "third-party/move/move-bytecode-verifier/bytecode-verifier-tests",
    "third-party/move/move-bytecode-verifier/fuzz",
    "third-party/move/move-bytecode-verifier/invalid-mutations",
    "third-party/move/move-bytecode-verifier/transactional-tests",
    "third-party/move/move-command-line-common",
    "third-party/move/move-compiler",
    "third-party/move/move-compiler/transactional-tests",
    "third-party/move/move-core/types",
    "third-party/move/move-ir/types",
    "third-party/move/move-ir-compiler",
    "third-party/move/move-ir-compiler/move-bytecode-source-map",
    "third-party/move/move-ir-compiler/move-ir-to-bytecode",
    "third-party/move/move-ir-compiler/move-ir-to-bytecode/syntax",
    "third-party/move/move-ir-compiler/transactional-tests",
    "third-party/move/move-model",
    "third-party/move/move-prover",
    "third-party/move/move-prover/boogie-backend",
    "third-party/move/move-prover/bytecode",
    "third-party/move/move-prover/interpreter",
    "third-party/move/move-prover/interpreter/crypto",
    "third-party/move/move-prover/interpreter-testsuite",
    # "third-party/move/move-prover/lab",
    "third-party/move/move-prover/move-abigen",
    "third-party/move/move-prover/move-docgen",
    "third-party/move/move-prover/move-errmapgen",
    # "third-party/move/move-prover/mutation",
    "third-party/move/move-prover/test-utils",
    # "third-party/move/move-prover/tools/spec-flatten",
    "third-party/move/move-stdlib",
    "third-party/move/move-symbol-pool",
    "third-party/move/move-vm/integration-tests",
    "third-party/move/move-vm/paranoid-tests",
    "third-party/move/move-vm/runtime",
    "third-party/move/move-vm/test-utils",
    "third-party/move/move-vm/transactional-tests",
    "third-party/move/move-vm/types",
    "third-party/move/testing-infra/module-generation",
    "third-party/move/testing-infra/test-generation",
    "third-party/move/testing-infra/transactional-test-runner",
    "third-party/move/tools/move-bytecode-utils",
    "third-party/move/tools/move-bytecode-viewer",
    "third-party/move/tools/move-cli",
    "third-party/move/tools/move-coverage",
    "third-party/move/tools/move-disassembler",
    "third-party/move/tools/move-explain",
    "third-party/move/tools/move-package",
    "third-party/move/tools/move-resource-viewer",
    "third-party/move/tools/move-unit-test",
    "third-party/move/tools/read-write-set",
    "third-party/move/tools/read-write-set/dynamic",
    "third-party/move/tools/read-write-set/types",
]

[workspace.package]
# This version string will be inherited by sui-core, sui-faucet, sui-node, sui-tools, sui-sdk, and sui crates
version = "0.30.0"

[profile.release]
# debug = 1 means line charts only, which is minimum needed for good stack traces
debug = 1
# Write debug info into a separate file.
split-debuginfo = 'packed'
# Without stripping, sui binary size would be > 1GB.
strip = 'debuginfo'
# Exit process with SIGABRT when any thread panics
panic = 'abort'

# Inherits from the release profile above.
[profile.bench]
# For convenience.
strip = 'none'

[profile.test.package.move-compiler]
# opt-level 2 for move-compiler reduces the size of some of its
# (recursive) stack frames by up to 10x, avoiding stack overflows.
opt-level = 2

[profile.simulator]
inherits = "test"
debug = true
debug-assertions = true
overflow-checks = true
# opt-level 1 gives >5x speedup for simulator tests without slowing down build times very much.
opt-level = 1

# Dependencies that should be kept in sync through the whole workspace
[workspace.dependencies]

bcs = "0.1.4"
tokio = "1.24.1"

# Move dependencies
move-binary-format = { path = "third-party/move/move-binary-format" }
move-bytecode-utils = { path = "third-party/move/tools/move-bytecode-utils" }
move-bytecode-verifier = { path = "third-party/move/move-bytecode-verifier" }
move-cli = { path = "third-party/move/tools/move-cli" }
move-compiler = { path = "third-party/move/move-compiler" }
move-core-types = { path = "third-party/move/move-core/types", features = ["address32"] }
move-disassembler = { path = "third-party/move/tools/move-disassembler" }
move-package = { path = "third-party/move/tools/move-package" }
move-stdlib = { path = "third-party/move/move-stdlib" }
move-vm-runtime =  { path = "third-party/move/move-vm/runtime" }
move-unit-test = { path = "third-party/move/tools/move-unit-test" }
move-vm-test-utils = { path = "third-party/move/move-vm/test-utils" }
move-vm-types = { path = "third-party/move/move-vm/types" }
move-command-line-common = { path = "third-party/move/move-command-line-common" }
move-transactional-test-runner = { path = "third-party/move/testing-infra/transactional-test-runner" }
move-ir-types = { path = "third-party/move/move-ir/types" }
move-prover = { path = "third-party/move/move-prover" }
move-prover-boogie-backend = { path = "third-party/move/move-prover/boogie-backend" }
move-stackless-bytecode = { path = "third-party/move/move-prover/bytecode" }
move-symbol-pool = { path = "third-party/move/move-symbol-pool" }

fastcrypto = { git = "https://github.com/MystenLabs/fastcrypto", rev = "c2f79b1807bff7d09517b631191b61f2614c641c" }
fastcrypto-zkp = { git = "https://github.com/MystenLabs/fastcrypto", rev = "c2f79b1807bff7d09517b631191b61f2614c641c", package = "fastcrypto-zkp" }

# anemo dependencies
anemo = { git = "https://github.com/mystenlabs/anemo.git", rev = "4ebf4a86952827ff0fcce6a2d8a80f42f34efed9" }
anemo-build = { git = "https://github.com/mystenlabs/anemo.git", rev = "4ebf4a86952827ff0fcce6a2d8a80f42f34efed9" }
anemo-cli = { git = "https://github.com/mystenlabs/anemo.git", rev = "4ebf4a86952827ff0fcce6a2d8a80f42f34efed9" }
anemo-tower = { git = "https://github.com/mystenlabs/anemo.git", rev = "4ebf4a86952827ff0fcce6a2d8a80f42f34efed9" }

# Use the same workspace-hack across crates.
workspace-hack = { path = "crates/workspace-hack" }

mysten-common = { path = "crates/mysten-common" }
mysten-network = { path = "crates/mysten-network" }
mysten-util-mem = { path = "crates/mysten-util-mem" }
telemetry-subscribers = { path = "crates/telemetry-subscribers" }
typed-store = { path = "crates/typed-store" }
typed-store-derive = { path = "crates/typed-store-derive" }
